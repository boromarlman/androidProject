apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'realm-android'

// Load properties
Properties settingsProperties = new Properties()
settingsProperties.load(project.rootProject.file('settings.properties').newInputStream())
def firebase_project_id = settingsProperties.getProperty('firebase_project_id')
def twitter_key = settingsProperties.getProperty('twitter_key')
def twitter_secret = settingsProperties.getProperty('twitter_secret')

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion "25.0.2"

    dataBinding {
        enabled = true
    }

    defaultConfig {
        applicationId rootProject.ext.packageName
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        vectorDrawables.useSupportLibrary = true

        buildConfigField 'String', 'FIREBASE_STORAGE_BUCKET', "\"gs://${firebase_project_id}.appspot.com\""
        buildConfigField 'String', 'TWITTER_KEY', "\"${twitter_key}\""
        buildConfigField 'String', 'TWITTER_SECRET', "\"${twitter_secret}\""
        buildConfigField 'int', 'REALM_SCHEMA_VERSION', '0'
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix "-debug"

            buildConfigField 'int', 'MESSAGE_LIMIT_COUNT', '15'
            buildConfigField 'boolean', 'PERSISTENCE_ENABLED', 'false'

            minifyEnabled false
            shrinkResources false
            zipAlignEnabled true
            debuggable true
        }
        release {
            buildConfigField 'int', 'MESSAGE_LIMIT_COUNT', '50'
            buildConfigField 'boolean', 'PERSISTENCE_ENABLED', 'true'

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            debuggable false
        }
    }

    productFlavors {
        development {
            minSdkVersion rootProject.ext.minSdkVersionDev
        }
        production {
            minSdkVersion rootProject.ext.minSdkVersion
        }
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE-FIREBASE.txt'
        exclude 'META-INF/NOTICE'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile "com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}"
    compile "com.android.support:design:${rootProject.ext.supportLibVersion}"
    compile "com.android.support:support-vector-drawable:${rootProject.ext.supportLibVersion}"
    compile "com.android.support:animated-vector-drawable:${rootProject.ext.supportLibVersion}"
    compile "com.android.support:recyclerview-v7:${rootProject.ext.supportLibVersion}"
    compile "com.google.firebase:firebase-core:${rootProject.ext.firebaseLibVersion}"
    compile "com.google.firebase:firebase-database:${rootProject.ext.firebaseLibVersion}"
    compile "com.google.firebase:firebase-auth:${rootProject.ext.firebaseLibVersion}"
    compile "com.google.firebase:firebase-crash:${rootProject.ext.firebaseLibVersion}"
    compile "com.google.firebase:firebase-config:${rootProject.ext.firebaseLibVersion}"
    compile "com.google.firebase:firebase-storage:${rootProject.ext.firebaseLibVersion}"

    // Dagger 2
    compile "com.google.dagger:dagger:${rootProject.ext.daggerVersion}"
    annotationProcessor "com.google.dagger:dagger-compiler:${rootProject.ext.daggerVersion}"

    // ButterKnife
    compile "com.jakewharton:butterknife:${rootProject.ext.butterKnifeVersion}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${rootProject.ext.butterKnifeVersion}"

    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.jakewharton.threetenabp:threetenabp:1.0.5'
    compile 'com.annimon:stream:1.1.5'
    compile 'com.github.curioustechizen.android-ago:library:1.3.2'
    compile 'com.squareup:otto:1.3.8'
    compile 'com.github.nguyenhoanglam:ImagePicker:1.1.3'

    compile('com.twitter.sdk.android:twitter:2.3.1@aar') {
        transitive = true;
    }
    compile('com.crashlytics.sdk.android:crashlytics:2.6.6@aar') {
        transitive = true;
    }

    // Retrolambda
    retrolambdaConfig 'net.orfjackal.retrolambda:retrolambda:2.5.0'
}

// THIS MUST BE AT THE BOTTOM
apply plugin: 'com.google.gms.google-services'
